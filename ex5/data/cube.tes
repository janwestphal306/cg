#version 400

// TODO: Define appropriate parameters for input layout specification.
layout (triangles, equal_spacing, cw) in;

in vec3 tc_vertex[];

out vec3 te_vertex;

//uniform mat4 Projection;
//uniform mat4 Modelview;

void main()
{
	// TODO: Interpolate the output vertex te_vertex by using the output vertices from tc_vertex[]
	// and the OpenGL tessellation coordinate. Normalize the vertex to a fixed length as well.

	vec3 p0 = gl_TessCoord.x * tc_vertex[0];
    vec3 p1 = gl_TessCoord.y * tc_vertex[1];
    vec3 p2 = gl_TessCoord.z * tc_vertex[2];
    // tePatchDistance = gl_TessCoord;
    te_vertex = normalize(p0 + p1 + p2);
    //gl_Position = Projection * Modelview * vec4(te_vertex, 1);
}
